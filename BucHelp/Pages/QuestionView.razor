<!--Page to display question along with answers to the question-->
<!--Parameter view page that will display the question title-->

@page "/QuestionView/{id:int}" 
@page "/QuestionView/{UserID:int}/{id:int}"
@inject NavigationManager navman

@inject Question question
@using Data

<div class="card card-body" style="width: 60rem;">
    <h1>@selected.Title</h1>
    <h2>Category:@selected.Category</h2> <!--This category appears before the rest of the text, if there is no category, it displays as Category:-->

    <p style="margin-left: 25px;">@selected.Description</p>
    <br/>
    <!--Each question will have a list of answers with it so the loop below grabs these-->
    @foreach(var answer in selected.GetAnswers())
    {
        @*<p style="margin-left: 25px;">@answer.Title</p>*@
        <p style="margin-left: 25px;">@answer.Description</p>
        <br/>
    }
</div>


@code{
    Question selected = new Question(); //need question object on page

    [Parameter]
    public int id { get; set; } //Chnaged from a string to an int

    [Parameter]
    public int UserID { get; set; }

    public int userIdContainer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        userIdContainer = UserID;

        /*
         *  Commented out this code because the question id is already read as an int so no need to parse here.
         *
         *  // retrieve question by id
         *   int idAsInt;
         *   bool parse = .TryParse(id, out idAsInt);
         *   if (!parse)
         *   {
         *       navman.NavigateTo("/");
         *       //throw new Exception("cannot parse id as string (replace this with a conditional 404 somehow)");
         *   }
         *
         *
         */

        
        Question q = QuestionObjService.GetForID(id);
        if (q == null)
        {
            navman.NavigateTo("/");
            //throw new Exception("question does not exist for id (replace this with a conditional 404 somehow)");
        }
        selected = q;
    }

}

<!-- copy pasted this out from the Reply page -->

@if (!showReply)
{
    <div>
        <button class="btn btn-primary" @onclick="reply" id="btnReply">Reply</button>
    </div>
    <br />
}

@if (showReply)
{
    <div>
        <label for="adescription">
            <sup class="star" style="color:red">*</sup>
            Description
        </label><br>
        <textarea name="adescription" rows="10" cols="50" maxlength="@descMaxCharacters"
              @bind-value:event="oninput" @bind-value="answer.Description"></textarea>

        <!--If the string is null auto display 0 until the user starts to type-->
        @if (answer.Description == null)
        {
            <div>
                Character Count: 0 / @descMaxCharacters
            </div>
        }
        else
        {
            <div>
                Character Count: @answer.Description.Count() / @descMaxCharacters
            </div>
        }


    </div>

    <button class="btn-primary" @onclick="submit">Post</button>

}

@code {
    bool showReply = false;
    public void reply()
    {
        showReply = true;

    }

    Answer answer = new Answer(); //Making a new answer object when entering the page

    string descriptioninput = "";
    int descMaxCharacters = 5000;

    protected async void submit(MouseEventArgs mouseEventArgs)
    {
        if (!string.IsNullOrWhiteSpace(answer.Description))
        {
            // finish up normal answer stuff that needs to exist
            answer.AnswerId = AnswerObjService.GenerateID();
            answer.QuestionId = id;
            answer.UserId = UserID;
            answer.Votes = 0;
            answer.Created = DateTime.Now;
            answer.LastUpdated = DateTime.Now;
            // write out answer
            AnswerObjService.Write(answer);
            DatabaseServices.Drivers.GetDefaultDriver().Commit();
            navman.NavigateTo($"/QuestionView/{userIdContainer}/{id}",true); //navigate to the post page once submitted, and force reload
        }
    }
}


<!--Page to display question along with answers to the question-->
<!--Parameter view page that will display the question title-->

@page "/QuestionView/{id}" 
@inject NavigationManager navman

@inject Question question
@using Data
<style>
    .cardHeader {
        border: 1px black dotted;
        top: 25px;
        height: 25px;
    }
    .questionBody {
        display: inline-block;
        float: right;
        border: 1px black dotted;
        position: relative;
        width:75%;
        /*right: -25%;*/
    }
    .CreatorName {
        float: left;
        font-size: large;
    }
    .dateCreated {
        float: right;
        font-size: medium;
        
    }
    .questionTitle {
        padding-top: 15px;
        float: left;
        padding-left: 15px;
    }
    .questionCat {
        float: right;
        padding-top: 15px;
        padding-right: 15px;
    }
    /*.bottomLayer {
        display: inline-block;
    }*/
    .questionDescription {
        padding-top: 15%;
        padding-left: 5%;
        padding-right: 5%;
    }
    .upDown {
        display: inline-block;
        border: 1px black dotted;
        float: left;
        position: relative;
        text-align: center;
        width: 20%;
        right: 0%;
    }
    .upCarat, .downCarat {
        border: none;
        background: none;
        font-size: xx-large;
        color: #041e42;
        padding-top: 5px;
        padding-bottom: 15px;
    }

</style>

<div class="card card-body" style="width: 60rem;">
    <div class="cardHeader">
        @*<img src="/Images/Tina_front_pic.jpg" alt="Tina is adorable" style="width:38px;height:38px; border-radius: 50%;" />*@
        <h4 class="CreatorName">@selected.UserName</h4>
        <h4 class="dateCreated">@selected.Created</h4>
    </div>
    <div class="bottomLayer">
        <div class="questionBody">
            <h2 class="questionTitle">@selected.Title</h2>
            <p class="questionCat">Category: @selected.Category</p> <!--This category appears before the rest of the text, if there is no category, it displays as Category:-->
            <p class="questionDescription" style="margin-left: 25px;">@selected.Description</p>

        </div>
        <div class="upDown">
            <button class="oi oi-chevron-top upCarat"></button>
            <h3>num</h3>
            <button class="oi oi-chevron-bottom downCarat"></button>
        </div>
    </div>
    
</div>

<br />
<!--Each question will have a list of answers with it so the loop below grabs these-->
@foreach (var answer in selected.GetAnswers())
{
    <div class="card card-body" id="AnswerCards" style="width: 60rem;">
        @*<p style="margin-left: 25px;">@answer.Title</p>*@
        <p style="margin-left: 25px;">@answer.Description</p>
    </div>
}




@code{
    Question selected = new Question(); //need question object on page

    [Parameter]
    public string? id { get; set; } 

    [Parameter]
    public int UserID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // retrieve question by id
        int idAsInt;
        bool parse = int.TryParse(id, out idAsInt);
        if (!parse)
        {
            navman.NavigateTo("/");
            //throw new Exception("cannot parse id as string (replace this with a conditional 404 somehow)");
        }
        Question q = QuestionObjService.GetForID(idAsInt);
        if (q == null)
        {
            navman.NavigateTo("/");
            //throw new Exception("question does not exist for id (replace this with a conditional 404 somehow)");
        }
        selected = q;
    }

}

<!-- copy pasted this out from the Reply page -->

@if (!showReply)
{
    <div>
        <button class="btn btn-primary" @onclick="reply" id="btnReply">Reply</button>
    </div>
    <br />
}

@if (showReply)
{
    <div>
        <label for="adescription">
            <sup class="star" style="color:red">*</sup>
            Description
        </label><br>
        <textarea name="adescription" rows="10" cols="50" maxlength="@descMaxCharacters"
              @bind-value:event="oninput" @bind-value="answer.Description"></textarea>

        <!--If the string is null auto display 0 until the user starts to type-->
        @if (answer.Description == null)
        {
            <div>
                Character Count: 0 / @descMaxCharacters
            </div>
        }
        else
        {
            <div>
                Character Count: @answer.Description.Count() / @descMaxCharacters
            </div>
        }


    </div>

    <button class="btn-primary" @onclick="submit">Post</button>

}

@code {
    bool showReply = false;
    public void reply()
    {
        showReply = true;

    }

    Answer answer = new Answer(); //Making a new answer object when entering the page

    string descriptioninput = "";
    int descMaxCharacters = 5000;

    protected async void submit(MouseEventArgs mouseEventArgs)
    {
        if (!string.IsNullOrWhiteSpace(answer.Description))
        {
            // finish up normal answer stuff that needs to exist
            answer.AnswerId = AnswerObjService.GenerateID();
            answer.QuestionId = int.Parse(id);
            answer.UserId = UserID;
            answer.Votes = 0;
            answer.Created = DateTime.Now;
            answer.LastUpdated = DateTime.Now;
            // write out answer
            AnswerObjService.Write(answer);
            DatabaseServices.Drivers.GetDefaultDriver().Commit();
            navman.NavigateTo($"/QuestionView/{id}",true); //navigate to the post page once submitted, and force reload
        }
    }
}


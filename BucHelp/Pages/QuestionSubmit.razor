<!--Page for the question submission form will store into a local list to be used later-->
@page "/questions"
@inject NavigationManager navigationManager
@inject Question questions
@using Data


<h3>Question</h3>
<div>
    <label for="qtitle"><sup class="star" style="color:red">*</sup>Title</label><br>
    <input maxlength="20" @bind-value="question.Title" />
</div>
<div class="col-md-6" style="padding:6px">
    
    <select id="Category" name="Category" cols="50" @bind="question.Category">
        <option value="0">Select a category</option>
        <option value="1">CSCI</option>
        <option value="2">Math</option>
        <option value="3">ENGL</option>
        <option value="4">Dorm</option>
        <option value="5">Campus</option>
        <option value="0">Uncategorized</option>
    </select>
</div>
<div>
    <label for="qdescription"><sup class="star" style="color:red">*</sup>
        Description</label><br>
    <textarea name="qdescription" rows="10" cols="50" maxlength="@descMaxCharacters"
        @bind-value:event="oninput" @bind-value="question.Description"></textarea>

    <!--If the string is null auto display 0 until the user starts to type-->    
    @if (question.Description == null)
    {
        <div>
            Character Count: 0 / @descMaxCharacters
        </div>
    }
    else
    {
        <div>
            Character Count: @question.Description.Count() / @descMaxCharacters
        </div>
    }

        
</div>

<button class="btn btn-primary"  @onclick="OnSubmit">Submit</button>


<!--Code for page logic belw-->
@code{

    Question question = new Question(); //Making a new question object when entering the page

    string descriptioninput = "";
    int descMaxCharacters = 5000;

    protected async void OnSubmit(MouseEventArgs mouseEventArgs)
    {
        this.question.Title = question.Title;               //Set the title to info in title input box
        this.question.Description = question.Description;   //Set the description to the info in the description box
        this.question.Category = Convert.ToString((Question.Categories)Convert.ToInt32(question.Category)); //Set the category to the selection from the menu

        //Logic for adding to storage goes here
        //Resource used to do this below 
        //https://stackoverflow.com/questions/67938642/blazor-server-how-to-persist-data-across-multiple-tabs-and-refreshes
        if(!string.IsNullOrWhiteSpace(question.Title) && !string.IsNullOrWhiteSpace(question.Description))
        {
            question.QuestionID = QuestionObjService.GenerateID();
            QuestionObjService.Write(question);
            DatabaseServices.Drivers.GetDefaultDriver().Commit();
            navigationManager.NavigateTo("/posthome/1"); //navigate to the post page once submitted
        }   
    }

}
@page "/"
@inject NavigationManager navigationManager
@inject AppState AppState
@using Data

<PageTitle>Login</PageTitle>

<h1>Login</h1>

<!--Html code for the Login/Password/Log in button.-->
<div class= "container border pt-3" style="padding:20px">
    <form method="post">
        <div class="text-danger" asp-validation-summary="ModelOnly"></div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Credential.Email"><sup class="star" style="color:red">*</sup>Email</label>
            </div>
            <div class="col-5">
                <input type="email" pattern="[a-zA-Z0-9._%-+]+@("@")[a-zA-Z]+\.[a-z]{2,3}$" maxlength="100" asp-for="login.Credential.Email" class="form-control" required @bind="email" />
                @if (emailError)
                {
                    <label asp-for="Credential.Password" style="color:red">Error Invalid Email Format</label>
                }
            </div>
            <span class="text-danger" asp-validation-for="login.Credential.UserName"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Credential.Password"><sup class="star" style="color:red">*</sup>Password</label>
            </div>
            <div class="col-5">
                <input type="password" maxlength="100" asp-for="login.Credential.Password" class="form-control" required @bind="password" />
                @if (error)
                {
                    <label asp-for="Credential.Password" style="color:red">Error Incorrect Email or Password</label>
                }
            </div>
            <span class="text-danger" asp-validation-for="login.Credential.Password"></span>
        </div>
        
        <br />
        <div class="form-group row">
            <div calss="col-2">
                <input type="Log In" class="btn btn-primary" value="Login" @onclick="submit" />
            </div>
        </div>
    </form>
</div>
<!--End of html code.-->

@code {
    LoginModel login = new LoginModel();

    bool error = false;
    bool emailError = false;
    string email;
    string password;

    protected async void submit(MouseEventArgs mouseEventArgs)
    {


        login.Credential.Email = email;
        login.Credential.Password = password;
        //Logic for adding to storage goes here
        //Resource used to do this below
        //https://stackoverflow.com/questions/67938642/blazor-server-how-to-persist-data-across-multiple-tabs-and-refreshes
        if (login.Credential.isValidEmail() && !string.IsNullOrWhiteSpace(login.Credential.Password))
        {
            AppState.LoggedIn = true;
            navigationManager.NavigateTo("/posthome/1"); //navigate to the post page once submitted
        }
        else if (!login.Credential.isValidEmail())
        {
            emailError = true;
        }
        else
        {
            error = true;
        }
    }
}

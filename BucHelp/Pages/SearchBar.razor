<!--URL page name-->
@page "/searchbar/{ID:int}/{PageNumber:int}"
@inject NavigationManager NavManager

<PageTitle>Search Bar</PageTitle>

<br>
<br>
<br>
<!--Filter for search bar, not well placed because it's just gonna be moved with changes anyway-->
<form style="width: 15rem; height: 60rem; position: absolute;  left: 75%;">
    <fieldset>
        <legend>Filter</legend>
        <div>
            <input type="checkbox" style="margin-left: 10px;" id="coding" name="interest" value="coding" />
            <label for="coding">Coding</label>
        </div>
        <div>
            <input type="checkbox" style="margin-left: 10px;" id="music" name="interest" value="music" />
            <label for="music">Music</label>
        </div>
        <div>
            <input type="checkbox" style="margin-left: 10px;" id="art" name="interest" value="art" />
            <label for="art">Art</label>
        </div>
        <div>
            <input type="checkbox" style="margin-left: 10px;" id="sports" name="interest" value="sports" />
            <label for="sports">Sports</label>
        </div>
        <div>
            <input type="checkbox" style="margin-left: 10px;" id="cooking" name="interest" value="cooking" />
            <label for="cooking">Cooking</label>
        </div>
        <div style="justify-content: center; align-items: center; display: flex;">
            @*<button type="submit">Submit</button>*@
        </div>
    </fieldset>
</form>



<br>
<br>
<br>


<!--Old attempt, ignore but keeping incase I need it later-->
<!--<input id="txtWord" name="txtWord" placeholder="Search.."  value="@SearchInput" @onchange="onChange" @onkeyup="Enter" /> -->

<div class="containerSearchBar">

    <!--This is the acutal search box, variable name 'SearchTerm'-->
    <input style="width: 30rem; height: 2.1rem; position: relative; top: -150px; left: 350px; margin: -25px 0 0 -25px;" @bind="SearchTerm" @bind:event="oninput" placeholder="Search.." />

    <!--This is the search box clear button, trigger 'ClearClick' method-->
    <button class="btn btn-searchbar" type="button" onclick="@ClearClick" style="position: relative; top: -140px; left: 375px; margin: -25px 0 0 -25px;">Clear</button>

    <br>

<!--Shows the total returned number of results by counting the number in the FilteredSearch List-->
<span class="text-muted ml-5" style=" position: relative; top: -135px; left: 525px; margin: -25px 0 0 -25px;">
    Total @FilteredSearch.Count Results Returned
</span>

<br>
<br>
<br>
</div>

<!--Lists each object name from the FilteredSearch list on the page in a list
<ul>
   
    @foreach (var search in FilteredSearch)
    {
        <li>@search.Name</li>
    }
</ul>
-->

<!--Lists each object name from the FilteredSearch list on the page in a list-->
<ul>
    @if (@FilteredSearch.Count() != OldFilteredCount)
    {
        
            NavManager.NavigateTo($"/searchbar/{idContainer}/1");
      
        OldFilteredCount = @FilteredSearch.Count();
    }

    @if (PageNumber == 0)
    { 
        @for (int j = 0; j < PageNumber + pageSize; j++) //displays a specific number of objects per page
        {
            @if (j < @FilteredSearch.Count())
            {
                <li style="position: relative; top: -115px; left: 150px">@FilteredSearch[j].Name</li>
            }
        }
    }
    else
    {
        @for (int j = (PageNumber - 1) * pageSize; j < PageNumber * pageSize; j++) //displays a specific number of objects per page
        {
            @if (j < @FilteredSearch.Count())
            {
                <li style="position: relative; top: -115px; left: 150px">@FilteredSearch[j].Name</li>
            }
        }
    }

</ul>

<!--numbered page buttons at the end of the page-->
<!--<div id="buttonstuff">
    @for (int i = 0; i <= (@FilteredSearch.Count / pageSize); i++)
    {
        <span style="position: relative; top: 90%; left: 345px;">
            <a class="btn btn-SearchPageBtn" href="searchbar/@(i+1)"> @(i+1) </a>
        </span>
    }
</div>
-->


<!--numbered page buttons at the end of the page-->
<div id="buttonstuff">
    @if (PageNumber == 0 && (@FilteredSearch.Count) > 0)
    {
        <span style="position: relative; top: 80%; left: 345px;">
            <!--<a class="btn btn-SearchPageBtn" href="searchbar/@(PageNumber+1)"> @(PageNumber + 1) </a> -->
            <u>@(PageNumber+1)</u>
            @if (@FilteredSearch.Count() > 10)
            {
            <a class="btn btn-SearchPageBtn" href="searchbar/@idContainer/@(PageNumber+2)"> Next </a>
            }
        </span>
    }
    else if(FilteredSearch.Count() > 0)
    {
        if ((@FilteredSearch.Count / pageSize) >= PageNumber)
        {
            <span style="position: relative; top: 80%; left: 300px;">
                <a class="btn btn-SearchPageBtn" href="searchbar/@idContainer/@(PageNumber-1)"> Back </a>
                <!--<a class="btn btn-SearchPageBtn" href="searchbar/@(PageNumber)"> @(PageNumber) </a> -->
                <u>@PageNumber</u>
                @if (@FilteredSearch.Count() > (10*@PageNumber + 1))
                {
                    <a class="btn btn-SearchPageBtn" href="searchbar/@idContainer/@(PageNumber+1)"> Next </a>
                }
            </span>
        }
        else
        {
            <span style="position: relative; top: 80%; left: 250px;">
                <a class="btn btn-SearchPageBtn" href="searchbar/@idContainer/@(PageNumber-1)"> Back </a>
                <u>@PageNumber</u>
            </span>
        }
    }

</div>


@code {

    private int pageSize = 10; //can change number of objects on page

    [Parameter]
    public int PageNumber { get; set; } //allows changes with buttons
    [Parameter]
    public int ID { get; set; }
    public int idContainer;

    //creates a new list of SearchItem objects
    List<SearchItem> FilteredSearch2 = new List<SearchItem> { };

    //creates a SearchItem object with Name only as of now (update later)
    public class SearchItem
    {
        public string? Name { get; set; }
    }

    private int OldFilteredCount = 0;

    // Initialize SearchTerm to "" to prevent null's
    private string SearchTerm { get; set; } = "";

    // Will list objects with data, this will be read in from csv file later
    List<SearchItem> SearchItems => new List<SearchItem>
    {
        new SearchItem { Name = "Dorms and Housing" },
        new SearchItem { Name = "Class Schedule" },
        new SearchItem { Name = "Dorm Laundry" },
        new SearchItem { Name = "Thesis" },
        new SearchItem { Name = "Graduation" },
        new SearchItem { Name = "CBAT" },
        new SearchItem { Name = "Library" },
        new SearchItem { Name = "Testing" },
        new SearchItem { Name = "Nursing" },
        new SearchItem { Name = "Culp" },
        new SearchItem { Name = "Dining" },

        new SearchItem { Name = "Dorms and Housing" },
        new SearchItem { Name = "Class Schedule" },
        new SearchItem { Name = "Dorm Laundry" },
        new SearchItem { Name = "Thesis" },
        new SearchItem { Name = "Graduation" },
        new SearchItem { Name = "CBAT" },
        new SearchItem { Name = "Library" },
        new SearchItem { Name = "Testing" },
        new SearchItem { Name = "Nursing" },
        new SearchItem { Name = "Culp" },
        new SearchItem { Name = "Dining"},

        new SearchItem { Name = "Dorms and Housing" },
        new SearchItem { Name = "Class Schedule" },
        new SearchItem { Name = "Dorm Laundry" },
        new SearchItem { Name = "Thesis" },
        new SearchItem { Name = "Graduation" },
        new SearchItem { Name = "CBAT" },
        new SearchItem { Name = "Library" },
        new SearchItem { Name = "Testing" },
        new SearchItem { Name = "Nursing" },
        new SearchItem { Name = "Culp" },
        new SearchItem { Name = "Dining" },

        new SearchItem { Name = "Dorms and Housing" },
        new SearchItem { Name = "Class Schedule" },
        new SearchItem { Name = "Dorm Laundry" },
        new SearchItem { Name = "Thesis" },
        new SearchItem { Name = "Graduation" },
        new SearchItem { Name = "CBAT" },
        new SearchItem { Name = "Library" },
        new SearchItem { Name = "Testing" },
        new SearchItem { Name = "Nursing" },
        new SearchItem { Name = "Culp" },
        new SearchItem { Name = "Dining" }
    };

    protected override async Task OnInitializedAsync() 
    {
        idContainer = ID;
    }


    //clears the search bar after clear button is pressed
    private void ClearClick()
    {
        SearchTerm = "";
        this.FilteredSearch2 = new List<SearchItem> { }; //clears object list
    }

    protected void OnChange()
    {
        NavManager.NavigateTo($"/searchbar/{ID}/1");
    }

    //filtering stored in new FilteredSearch variable where SearchItem is in listed object
    List<SearchItem> FilteredSearch => SearchItems.Where(i => i.Name.ToLower().Contains(SearchTerm.ToLower())).ToList();


}

